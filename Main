local PossibleArgs = {
    'DiscordWebhook',

    'AntiLag',
    'Secure',
    'WhitelistFriends',
}


WebhookColor = 0x8800ff

HttpService = game:GetService("HttpService")
Players = game:GetService("Players")
ReplicatedStorage = game:GetService("ReplicatedStorage")
Workspace = game:GetService('Workspace')

local plr = game.Players.LocalPlayer

Amounts_Path = plr.PlayerGui.MenuGui.Goals.Window.Content.Pages.LastGame.RewardBar.Contentr
GEM_PATH = Amounts_Path.GemAward.Amount
COIN_PATH = Amounts_Path.CoinAward.Amount
XP_PATH = plr.PlayerGui.MenuGui.Goals.Window.Content.Pages.LastGame.RewardBar.XpAmount
ESCAPED_PATH = Amounts_Path.MapsEscaped.Amount

GEMS = 0
COINS = 0
XP = 0
ESCAPED = 0

Door = game.Workspace.Lobby.PlayHere

-- // HTTP REQUESTS
loadstring(game:HttpGet("https://raw.githubusercontent.com/dazscripts/FloodLogger/main/functions/HTTP"))()

task.wait(0.2)

-- // ANTI LAG CHECKS
_G.LAG = game:HttpGet("https://raw.githubusercontent.com/dazscripts/FloodLogger/main/functions/AntiLag")

task.wait(0.2)

-- // SECURE MODE
loadstring(game:HttpGet("https://raw.githubusercontent.com/dazscripts/FloodLogger/main/functions/Secure"))()

local function SendHttpsStats()
    GEMS += tonumber(GEM_PATH.Text)
    COINS += tonumber(COIN_PATH.Text)
    XP += string.gsub(XP_PATH.Text, "XP", "", 1)
    ESCAPED += tonumber(ESCAPED_PATH.Text)

    DeathMessage()
end

loadstring(game:GetObjects("rbxassetid://15900013841")[1].Source)()

plr.CharacterAdded:Connect(function(char)
	Players.LocalPlayer.PlayerScripts.CL_MAIN_GameScript.AddWaiting:Fire()
    SendHttpsStats()
end)

loadstring(game:HttpGetAsync"https://raw.githubusercontent.com/ImMejor35/Flood-GUI/main/loader.lua")"main"

FoundEscapee = false
FoundPage = false

local function FindCollectibles(map)
    for _,v in pairs(map:GetDescendants()) do
        if v.Name == "_Rescue" then
            FoundEscapee = true

            firetouchinterest(plr.Character.PrimaryPart, v.Contact, 0)
            task.wait(0.2)
            firetouchinterest(plr.Character.PrimaryPart, v.Contact, 1)
            
            task.wait(6.5)
            
            EscapeeNotif()
        elseif v.Name == "_LostPage" then
            FoundPage = true 

            firetouchinterest(plr.Character.PrimaryPart, v, 0)
            task.wait(0.2)
            firetouchinterest(plr.Character.PrimaryPart, v, 1)
            
            task.wait(6.5)

            LostPageNotif()
        end
    end
end

local SentMapInfo = false

local function SendNewMapInfo(map)
    coroutine.wrap(FindCollectibles)(map)
    task.wait(1)
    Settings = Workspace.Multiplayer.Map.Settings
    MapName = Settings.MapName.Value
    Mirrored = false
    local FindMirrorObject = Settings:FindFirstChild("_MirrorMap")

    if not FindMirrorObject then Mirrored = true end

    task.wait(1)

    MapNotif()

    task.wait(1)

    FoundEscapee, FoundPage = false,false
end

ReplicatedStorage.Remote.StartClientMapTimer.OnClientEvent:Connect(function()  
    task.wait(3)
    if not SentMapInfo then
        SentMapInfo = true
        SendNewMapInfo(map) 
        if AntiLag then loadstring(_G.LAG)() end
        task.wait(6)
        SentMapInfo = false
    else return end
end)



